<?xml version="1.0" encoding="UTF-8"?>
<prompt>
    <purpose>
        Generate React components with Tailwind CSS styling, following official Tailwind setup and best practices
    </purpose>

    <context>
        <description>
            This prompt generates React components using Tailwind CSS utility classes,
            ensuring proper setup and configuration according to Tailwind documentation.
        </description>
        <environment_setup>
            <installation>
                <step>Install Tailwind and dependencies</step>
                <command>npm install -D tailwindcss postcss autoprefixer @tailwindcss/forms @tailwindcss/typography @tailwindcss/aspect-ratio</command>
                <command>npx tailwindcss init -p</command>
            </installation>
            <configuration>
                <file path="tailwind.config.js">
                    <content><![CDATA[
                        /** @type {import('tailwindcss').Config} */
                        module.exports = {
                          darkMode: 'class',
                          content: [
                            "./app/**/*.{js,ts,jsx,tsx,mdx}",
                            "./pages/**/*.{js,ts,jsx,tsx,mdx}",
                            "./components/**/*.{js,ts,jsx,tsx,mdx}",
                            "./src/**/*.{js,ts,jsx,tsx,mdx}"
                          ],
                          theme: {
                            extend: {
                              colors: {
                                border: "hsl(var(--border))",
                                input: "hsl(var(--input))",
                                ring: "hsl(var(--ring))",
                                background: "hsl(var(--background))",
                                foreground: "hsl(var(--foreground))",
                                primary: {
                                  DEFAULT: "hsl(var(--primary))",
                                  foreground: "hsl(var(--primary-foreground))"
                                },
                                secondary: {
                                  DEFAULT: "hsl(var(--secondary))",
                                  foreground: "hsl(var(--secondary-foreground))"
                                }
                              },
                              borderRadius: {
                                lg: "var(--radius)",
                                md: "calc(var(--radius) - 2px)",
                                sm: "calc(var(--radius) - 4px)"
                              }
                            }
                          },
                          plugins: [
                            require("@tailwindcss/typography"),
                            require("@tailwindcss/forms"),
                            require("@tailwindcss/aspect-ratio")
                          ],
                        }
                    ]]></content>
                </file>
                <file path="src/styles/globals.css">
                    <content><![CDATA[
                        @tailwind base;
                        @tailwind components;
                        @tailwind utilities;
                        
                        @layer base {
                          :root {
                            --background: 0 0% 100%;
                            --foreground: 222.2 84% 4.9%;
                            --card: 0 0% 100%;
                            --card-foreground: 222.2 84% 4.9%;
                            --popover: 0 0% 100%;
                            --popover-foreground: 222.2 84% 4.9%;
                            --primary: 222.2 47.4% 11.2%;
                            --primary-foreground: 210 40% 98%;
                            --secondary: 210 40% 96.1%;
                            --secondary-foreground: 222.2 47.4% 11.2%;
                            --muted: 210 40% 96.1%;
                            --muted-foreground: 215.4 16.3% 46.9%;
                            --accent: 210 40% 96.1%;
                            --accent-foreground: 222.2 47.4% 11.2%;
                            --destructive: 0 84.2% 60.2%;
                            --destructive-foreground: 210 40% 98%;
                            --border: 214.3 31.8% 91.4%;
                            --input: 214.3 31.8% 91.4%;
                            --ring: 222.2 84% 4.9%;
                            --radius: 0.5rem;
                          }
                        
                          .dark {
                            --background: 222.2 84% 4.9%;
                            --foreground: 210 40% 98%;
                            --card: 222.2 84% 4.9%;
                            --card-foreground: 210 40% 98%;
                            --popover: 222.2 84% 4.9%;
                            --popover-foreground: 210 40% 98%;
                            --primary: 210 40% 98%;
                            --primary-foreground: 222.2 47.4% 11.2%;
                            --secondary: 217.2 32.6% 17.5%;
                            --secondary-foreground: 210 40% 98%;
                            --muted: 217.2 32.6% 17.5%;
                            --muted-foreground: 215 20.2% 65.1%;
                            --accent: 217.2 32.6% 17.5%;
                            --accent-foreground: 210 40% 98%;
                            --destructive: 0 62.8% 30.6%;
                            --destructive-foreground: 210 40% 98%;
                            --border: 217.2 32.6% 17.5%;
                            --input: 217.2 32.6% 17.5%;
                            --ring: 212.7 26.8% 83.9%;
                          }
                        }
                    ]]></content>
                </file>
            </configuration>
        </environment_setup>
    </context>

    <inputs>
        <input name="component_specs" type="object">
            <description>Component specifications from design system</description>
            <properties>
                <property name="name" type="string">Component name</property>
                <property name="type" type="string">Component type (page/layout/component)</property>
                <property name="props" type="object">Component props definition</property>
                <property name="styling" type="object">Styling requirements</property>
            </properties>
        </input>
        <input name="design_tokens" type="object">
            <description>Tailwind theme configuration and design tokens</description>
        </input>
    </inputs>

    <workflow>
        <step name="component_generation">
            <action>Generate React component with Tailwind classes</action>
            <templates>
                <template name="basic_component">
                    <code><![CDATA[
                        import { FC } from 'react'
                        import type { ${ComponentName}Props } from './types'

                        export const ${ComponentName}: FC<${ComponentName}Props> = ({
                          children,
                          className,
                          ...props
                        }) => {
                          return (
                            <div 
                              className={`
                                // Base styles
                                ${baseStyles}
                                // Responsive styles
                                ${responsiveStyles}
                                // State styles
                                ${stateStyles}
                                // Custom classes
                                ${className}
                              `}
                              {...props}
                            >
                              {children}
                            </div>
                          )
                        }
                    ]]></code>
                </template>
            </templates>
        </step>

        <step name="styling_implementation">
            <action>Implement Tailwind utility classes</action>
            <categories>
                <category name="layout">
                    <utilities>
                        <utility name="container">mx-auto px-4 sm:px-6 lg:px-8</utility>
                        <utility name="flex_layout">flex flex-col md:flex-row items-center justify-between</utility>
                        <utility name="grid_layout">grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4</utility>
                    </utilities>
                </category>
                <category name="typography">
                    <utilities>
                        <utility name="heading">text-3xl font-bold tracking-tight text-gray-900</utility>
                        <utility name="body">text-base text-gray-500</utility>
                        <utility name="link">text-indigo-600 hover:text-indigo-500</utility>
                    </utilities>
                </category>
                <category name="spacing">
                    <utilities>
                        <utility name="padding">p-4 sm:p-6 lg:p-8</utility>
                        <utility name="margin">m-4 sm:m-6 lg:m-8</utility>
                        <utility name="gap">gap-x-4 gap-y-6</utility>
                    </utilities>
                </category>
                <category name="colors">
                    <utilities>
                        <utility name="background">bg-white dark:bg-gray-800</utility>
                        <utility name="text">text-gray-900 dark:text-gray-100</utility>
                        <utility name="border">border-gray-200 dark:border-gray-700</utility>
                    </utilities>
                </category>
                <category name="effects">
                    <utilities>
                        <utility name="shadow">shadow-sm hover:shadow-md</utility>
                        <utility name="transition">transition-all duration-200</utility>
                        <utility name="hover">hover:scale-105</utility>
                    </utilities>
                </category>
            </categories>
        </step>

        <step name="responsive_design">
            <action>Implement responsive breakpoints</action>
            <breakpoints>
                <point name="sm">640px</point>
                <point name="md">768px</point>
                <point name="lg">1024px</point>
                <point name="xl">1280px</point>
                <point name="2xl">1536px</point>
            </breakpoints>
            <examples>
                <example name="responsive_container">
                    <class>w-full sm:w-1/2 md:w-1/3 lg:w-1/4</class>
                </example>
                <example name="responsive_text">
                    <class>text-sm sm:text-base md:text-lg lg:text-xl</class>
                </example>
            </examples>
        </step>

        <step name="dark_mode">
            <action>Implement dark mode support</action>
            <implementation>
                <class_pattern>bg-white dark:bg-gray-800 text-gray-900 dark:text-gray-100</class_pattern>
            </implementation>
        </step>

        <step name="optimization">
            <action>Optimize for production</action>
            <tasks>
                <task>
                    <name>Minification</name>
                    <command>npx tailwindcss -o build.css --minify</command>
                </task>
                <task>
                    <name>Purge unused styles</name>
                    <config><![CDATA[
                        content: [
                            './src/**/*.{js,jsx,ts,tsx}',
                            './public/index.html'
                        ]
                    ]]></config>
                </task>
            </tasks>
        </step>
    </workflow>

    <output>
        <files>
            <file path="src/components/${ComponentName}/${ComponentName}.tsx">
                <description>Main component file with Tailwind styling</description>
            </file>
            <file path="src/components/${ComponentName}/types.ts">
                <description>TypeScript types for the component</description>
            </file>
            <file path="src/components/${ComponentName}/${ComponentName}.test.tsx">
                <description>Component tests</description>
            </file>
            <file path="src/components/${ComponentName}/README.md">
                <description>Component documentation with styling examples</description>
            </file>
        </files>
    </output>

    <validation>
        <checks>
            <check>Tailwind configuration is properly set up</check>
            <check>All utility classes are valid</check>
            <check>Responsive design works across breakpoints</check>
            <check>Dark mode implementation is correct</check>
            <check>Production optimization is configured</check>
        </checks>
    </validation>
</prompt> 