<?xml version="1.0" encoding="UTF-8"?>
<prompt>
    <purpose>
        Orchestrate a continuous code quality improvement process through coordinated agent interactions
    </purpose>

    <chain-position>
        <step>1</step>
        <name>code_quality_chain</name>
        <type>quality_improvement</type>
    </chain-position>

    <input>
        <sources>
            <source>
                <type>source_code</type>
                <format>source_files</format>
            </source>
            <source>
                <type>previous_iteration</type>
                <format>json</format>
                <from>code_generator_agent.output</from>
            </source>
        </sources>
        <requirements>
            <format>json</format>
            <schema>
                <![CDATA[
                {
                    "sourceCode": "string",
                    "language": "string",
                    "previousMetrics": {
                        "status": {
                            "passed": "boolean",
                            "critical_failures": ["string"],
                            "blocking_issues": ["string"],
                            "warnings": ["string"]
                        },
                        "quality": "number",
                        "principles": {
                            "kiss": "number",
                            "yagni": "number",
                            "solid": "number"
                        }
                    },
                    "qualityThresholds": {
                        "critical": {
                            "security": "boolean",
                            "performance": "boolean",
                            "reliability": "boolean",
                            "test_coverage": "boolean",
                            "code_style": "boolean"
                        },
                        "complexity": "number",
                        "coverage": "number",
                        "duplication": "number"
                    },
                    "metadata": {
                        "iteration": "number",
                        "timestamp": "string",
                        "chainContext": "object"
                    }
                }
                ]]>
            </schema>
        </requirements>
        <validation>
            <rules>
                <rule>
                    <type>schema_validation</type>
                    <severity>error</severity>
                </rule>
                <rule>
                    <type>source_exists</type>
                    <severity>error</severity>
                </rule>
                <rule>
                    <type>metrics_range</type>
                    <severity>warning</severity>
                </rule>
            </rules>
        </validation>
    </input>

    <output>
        <format>json</format>
        <schema>
            <![CDATA[
            {
                "chainStatus": {
                    "passed": "boolean",
                    "critical_issues": ["string"],
                    "blocking_issues": ["string"],
                    "warnings": ["string"],
                    "currentIteration": "number",
                    "qualityScore": "number",
                    "lastEvaluation": "timestamp",
                    "improvements": [{
                        "iteration": "number",
                        "changes": ["string"],
                        "qualityDelta": "number",
                        "resolved_issues": ["string"]
                    }],
                    "status": "string",
                    "nextStep": "string",
                    "failureReasons": ["string"],
                    "pass_criteria_met": {
                        "security": "boolean",
                        "performance": "boolean",
                        "reliability": "boolean",
                        "test_coverage": "boolean",
                        "code_style": "boolean"
                    }
                }
            }
            ]]>
        </schema>
        <destinations>
            <destination>implementation_chain</destination>
            <destination>documentation_chain</destination>
        </destinations>
    </output>

    <workflow>
        <iteration-loop>
            <condition>Continue until all critical quality gates pass OR max iterations reached</condition>
            <steps>
                <step id="1">
                    <agent>code_evaluation_agent</agent>
                    <input>
                        <source>source_code</source>
                        <previous_output>code_generator_agent.output</previous_output>
                    </input>
                    <output>
                        <type>evaluationReport</type>
                        <target>code_improver_agent</target>
                    </output>
                    <test>
                        <type>unit_test</type>
                        <requirements>
                            <coverage>
                                <minimum>90</minimum>
                                <critical_paths>100</critical_paths>
                            </coverage>
                            <pass_criteria>
                                <critical>
                                    <security>true</security>
                                    <performance>true</performance>
                                    <reliability>true</reliability>
                                    <test_coverage>true</test_coverage>
                                    <code_style>true</code_style>
                                </critical>
                                <quality_score>
                                    <minimum>0.85</minimum>
                                </quality_score>
                            </pass_criteria>
                            <cases>
                                <case>
                                    <name>critical_validation</name>
                                    <description>Verify all critical quality gates pass</description>
                                    <priority>high</priority>
                                </case>
                                <case>
                                    <name>evaluation_accuracy</name>
                                    <description>Verify evaluation metrics accuracy</description>
                                </case>
                                <case>
                                    <name>code_analysis</name>
                                    <description>Test code analysis functionality</description>
                                </case>
                                <case>
                                    <name>report_generation</name>
                                    <description>Validate evaluation report format</description>
                                </case>
                            </cases>
                        </requirements>
                    </test>
                </step>

                <step id="2">
                    <agent>code_improver_agent</agent>
                    <input>
                        <source>code_evaluation_agent.evaluationReport</source>
                    </input>
                    <output>
                        <type>improvementResult</type>
                        <target>code_rater_agent</target>
                    </output>
                </step>

                <step id="3">
                    <agent>code_rater_agent</agent>
                    <input>
                        <source>code_improver_agent.improvementResult</source>
                    </input>
                    <output>
                        <type>ratingReport</type>
                        <target>code_generator_agent</target>
                    </output>
                    <test>
                        <type>unit_test</type>
                        <requirements>
                            <coverage>
                                <minimum>90</minimum>
                                <critical_paths>100</critical_paths>
                            </coverage>
                            <pass_criteria>
                                <critical>
                                    <security>true</security>
                                    <performance>true</performance>
                                    <reliability>true</reliability>
                                    <test_coverage>true</test_coverage>
                                    <code_style>true</code_style>
                                </critical>
                                <quality_score>
                                    <minimum>0.85</minimum>
                                </quality_score>
                            </pass_criteria>
                            <cases>
                                <case>
                                    <name>critical_validation</name>
                                    <description>Verify all critical quality gates pass</description>
                                    <priority>high</priority>
                                </case>
                                <case>
                                    <name>rating_accuracy</name>
                                    <description>Verify rating calculations</description>
                                </case>
                                <case>
                                    <name>metrics_validation</name>
                                    <description>Test metrics validation logic</description>
                                </case>
                                <case>
                                    <name>threshold_checks</name>
                                    <description>Validate quality threshold checks</description>
                                </case>
                                <case>
                                    <name>report_format</name>
                                    <description>Test rating report structure</description>
                                </case>
                            </cases>
                        </requirements>
                    </test>
                </step>

                <step id="4">
                    <agent>code_generator_agent</agent>
                    <input>
                        <source>code_rater_agent.ratingReport</source>
                    </input>
                    <output>
                        <type>generatorDecision</type>
                        <target>code_evaluation_agent</target>
                        <example>
                            <![CDATA[
                            {
                                "generatorDecision": {
                                    "action": "continue_iteration",
                                    "code": "// Generated code here",
                                    "qualityMetrics": {
                                        "scores": {},
                                        "principles": {},
                                        "trends": {}
                                    },
                                    "nextAction": "evaluate",
                                    "targetAgent": "code_evaluation_agent"
                                }
                            }
                            ]]>
                        </example>
                    </output>
                </step>
            </steps>
        </iteration-loop>
    </workflow>

    <termination-conditions>
        <condition>
            <type>Pass Status</type>
            <description>Code passes all critical quality gates</description>
            <priority>1</priority>
            <requirements>
                <requirement>All critical tests pass</requirement>
                <requirement>No security vulnerabilities</requirement>
                <requirement>Performance meets thresholds</requirement>
                <requirement>Test coverage meets minimum</requirement>
                <requirement>Code style standards met</requirement>
            </requirements>
            <validation>
                <critical_gates>
                    <security>true</security>
                    <performance>true</performance>
                    <reliability>true</reliability>
                    <test_coverage>true</test_coverage>
                    <code_style>true</code_style>
                </critical_gates>
                <blocking_issues>0</blocking_issues>
            </validation>
        </condition>
        <condition>
            <type>Quality Threshold</type>
            <description>Code meets or exceeds target quality metrics</description>
            <priority>2</priority>
        </condition>
        <condition>
            <type>Max Iterations</type>
            <description>Maximum improvement iterations reached</description>
            <priority>3</priority>
        </condition>
        <condition>
            <type>Diminishing Returns</type>
            <description>Improvements become negligible between iterations</description>
            <priority>4</priority>
        </condition>
    </termination-conditions>

    <commands>
        <command>
            <name>/evaluate-code</name>
            <description>Initiate code evaluation process</description>
        </command>
        <command>
            <name>/improve-code</name>
            <description>Apply improvements based on evaluation</description>
        </command>
        <command>
            <name>/rate-code</name>
            <description>Rate current code quality</description>
        </command>
        <command>
            <name>/generate-code</name>
            <description>Generate final improved version</description>
        </command>
        <command>
            <name>/code-quality-status</name>
            <description>Check current chain status</description>
        </command>
    </commands>
</prompt> 