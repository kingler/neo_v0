<?xml version="1.0" encoding="UTF-8"?>
<prompt>
    <purpose>
        Generate React components with Tailwind CSS styling and TypeScript support
    </purpose>

    <context>
        <description>
            This prompt generates React components with integrated Tailwind CSS styling,
            ensuring type safety with TypeScript and following best practices.
        </description>
        <workflow_position>
            <phase>Implementation</phase>
            <predecessor>Design System Integration</predecessor>
            <successor>Component Testing</successor>
        </workflow_position>
    </context>

    <inputs>
        <input name="component_specs" type="object">
            <description>Component specifications from design system</description>
        </input>
        <input name="style_tokens" type="object">
            <description>Tailwind design tokens and theme configuration</description>
        </input>
        <input name="component_type" type="string">
            <description>Type of component (page, layout, feature, shared)</description>
        </input>
    </inputs>

    <workflow>
        <step name="setup_environment">
            <action>Configure development environment</action>
            <tasks>
                <task>Initialize React project</task>
                <task>Setup Tailwind CSS</task>
                <task>Configure TypeScript</task>
                <task>Setup testing environment</task>
            </tasks>
        </step>

        <step name="generate_component">
            <action>Generate React component structure</action>
            <structure>
                <file>Component file (TSX)</file>
                <file>Styles file (CSS)</file>
                <file>Test file (TSX)</file>
                <file>Story file (TSX)</file>
                <file>Types file (TS)</file>
            </structure>
        </step>

        <step name="implement_styling">
            <action>Implement Tailwind CSS styling</action>
            <styles>
                <category name="layout">
                    <class>Container classes</class>
                    <class>Grid system</class>
                    <class>Flexbox utilities</class>
                </category>
                <category name="typography">
                    <class>Font families</class>
                    <class>Text sizes</class>
                    <class>Font weights</class>
                </category>
                <category name="colors">
                    <class>Background colors</class>
                    <class>Text colors</class>
                    <class>Border colors</class>
                </category>
                <category name="effects">
                    <class>Shadows</class>
                    <class>Transitions</class>
                    <class>Transforms</class>
                </category>
            </styles>
        </step>

        <step name="add_interactivity">
            <action>Implement component interactivity</action>
            <features>
                <feature>State management</feature>
                <feature>Event handlers</feature>
                <feature>Animations</feature>
                <feature>Form handling</feature>
            </features>
        </step>

        <step name="testing">
            <action>Implement component tests</action>
            <test_types>
                <type>Unit tests</type>
                <type>Integration tests</type>
                <type>Visual regression tests</type>
                <type>Accessibility tests</type>
            </test_types>
        </step>

        <step name="documentation">
            <action>Generate component documentation</action>
            <sections>
                <section>Usage examples</section>
                <section>Props API</section>
                <section>Styling guide</section>
                <section>Best practices</section>
            </sections>
        </step>
    </workflow>

    <validation>
        <criteria>
            <criterion>TypeScript compliance</criterion>
            <criterion>Accessibility standards</criterion>
            <criterion>Performance metrics</criterion>
            <criterion>Code quality</criterion>
            <criterion>Test coverage</criterion>
        </criteria>
    </validation>

    <output>
        <files>
            <file path="src/components/${ComponentName}/${ComponentName}.tsx">Component implementation</file>
            <file path="src/components/${ComponentName}/${ComponentName}.test.tsx">Component tests</file>
            <file path="src/components/${ComponentName}/${ComponentName}.stories.tsx">Storybook stories</file>
            <file path="src/components/${ComponentName}/types.ts">TypeScript types</file>
            <file path="src/components/${ComponentName}/README.md">Component documentation</file>
        </files>
    </output>
</prompt> 