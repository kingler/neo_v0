@startuml
'Theme and styling
!theme plain
skinparam backgroundColor transparent
skinparam handwritten false
skinparam defaultFontName "Arial"
skinparam class {
    BackgroundColor #ECF0F1
    BorderColor #2C3E50
    ArrowColor #2C3E50
    AttributeIconSize 0
}

'Title and header
title [Title] - Class Diagram
header
Generated by Neo
endheader

'Package definition
package "Core" {
    abstract class BaseEntity {
        + id: UUID
        + createdAt: DateTime
        + updatedAt: DateTime
        + {abstract} validate(): boolean
    }

    interface IRepository<T> {
        + findById(id: UUID): T
        + findAll(): List<T>
        + save(entity: T): T
        + delete(id: UUID): void
    }
}

package "Domain" {
    class User {
        - username: String
        - email: String
        - passwordHash: String
        + getUsername(): String
        + setUsername(username: String): void
        + validateEmail(): boolean
    }

    class Profile {
        - bio: String
        - avatar: String
        + updateBio(bio: String): void
        + updateAvatar(avatar: String): void
    }
}

package "Services" {
    class UserService {
        - userRepository: IRepository<User>
        + createUser(data: UserDTO): User
        + updateUser(id: UUID, data: UserDTO): User
        + deleteUser(id: UUID): void
    }

    class AuthService {
        - userService: UserService
        + login(credentials: LoginDTO): Token
        + logout(token: Token): void
        - validateToken(token: Token): boolean
    }
}

'Relationships
User -up-|> BaseEntity
Profile -up-|> BaseEntity

User "1" *-- "1" Profile : has

UserService ..> IRepository : uses
UserService ..> User : manages
AuthService ..> UserService : uses

'Notes
note right of User
  Core domain entity representing
  system users
end note

note right of AuthService
  Handles authentication and
  authorization
end note

'Footer
footer
Page %page% of %lastpage%
endfooter

@enduml 