# Neo SDLC Orchestra Leader - Version 10
categories:
  # 1. Requirement Gathering
  requirement_gathering:
    commands:
      "#gather-requirements":
        description: "Collect and analyze project requirements"
        workflow:
          - "Stakeholder interviews"
          - "Document analysis"
          - "Requirements validation"
    principles:
      - name: "SOLID"
        implementation:
          - "Single Responsibility"
          - "Open-Closed"
          - "Liskov Substitution"
          - "Interface Segregation"
          - "Dependency Inversion"
      - name: "KISS"
        implementation:
          - "Keep solutions simple"
          - "Avoid complexity"
      - name: "YAGNI"
        implementation:
          - "Build only what's needed"
          - "Avoid speculative features"
    deliverables:
      - type: "BRD"
        template: "business_gen_prompt.md"
      - type: "PRD"
        template: "product_manager_prd.md"
      - type: "User Stories"
        template: "story-analysis-prompt.md"

  # 2. UX Design
  ux_design:
    workflow_triggers:
      prd_completion:
        source: "PRD.md"
        action: "#init-design-phase"
        validation:
          - "Check PRD completeness"
          - "Verify requirements clarity"
          - "Confirm stakeholder approval"

    documentation:
      uxdd_components:
        1_ux_research:
          user_research_report:
            template: "research_report.md"
            sections:
              - "Research objectives"
              - "Methodology"
              - "Key findings"
              - "Recommendations"
          user_personas:
            template: "persona_template.md"
            sections:
              - "Demographics"
              - "Goals and needs"
              - "Pain points"
              - "Behaviors"

        2_ux_design:
          object_oriented_ux:
            template: "ooux_template.md"
            sections:
              - "Object mapping"
              - "Relationship diagrams"
              - "Core objects"
              - "Object attributes"
          
          user_journeys:
            template: "journey_template.md"
            sections:
              - "User goals"
              - "Journey stages"
              - "Touch points"
              - "Pain points"
              - "Opportunities"
          
          wireframes:
            template: "wireframe_template.md"
            organization:
              by_user_flow:
                - "User registration flow"
                - "Core feature flows"
                - "Settings flows"
              by_component:
                - "Navigation components"
                - "Form components"
                - "Content components"
            annotations:
              types:
                - "User interactions"
                - "Data elements"
                - "State changes"
                - "Component behavior"
            svg_generation:
              command: "#generate-svg"
              output: "wireframes/*.svg"
              embedding: "auto-embed into UXDD.md"

        3_prototype:
          simple_prototype:
            template: "prototype_template"
            technologies:
              - "HTML"
              - "CSS"
              - "JavaScript"
            features:
              - "Basic interactions"
              - "Navigation flow"
              - "Form handling"
            output:
              - "prototype/index.html"
              - "prototype/styles.css"
              - "prototype/script.js"

    commands:
      "#init-design-phase":
        description: "Initialize design phase from PRD"
        workflow:
          - "Load PRD content"
          - "Setup UXDD structure"
          - "Initialize research phase"
          - "Create tracking system"

      "#new-feature-design":
        description: "Design process for new features"
        workflow:
          - "Analyze feature requirements"
          - "Update user journeys"
          - "Create feature wireframes"
          - "Update prototype"
          - "Update UXDD"
        deliverables:
          - "Updated user journeys"
          - "Feature wireframes"
          - "Prototype updates"
          - "UXDD updates"

      "#consolidate-uxdd":
        description: "Consolidate all UX documentation into UXDD"
        workflow:
          - "Gather all components"
          - "Generate final UXDD"
          - "Embed SVG wireframes"
          - "Create index"
        output:
          file: "UXDD.md"
          sections:
            - name: "Research"
              sources: 
                - "user_research_report.md"
                - "user_personas.md"
            - name: "Design"
              sources:
                - "ooux_template.md"
                - "journey_template.md"
                - "wireframes/*.svg"
            - name: "Prototype"
              sources:
                - "prototype_documentation.md"
                - "prototype_screenshots"

    deliverables:
      - type: "Wireframes"
        template: "wireframe-generation-prompt.md"
      - type: "Design System"
        template: "design_system_generator.md"
      - type: "User Flows"
        template: "journey_map_generator.md"
    tools:
      screenshot_analyzer:
        description: "Analyze UI/UX references"
        capabilities:
          - "UI element detection"
          - "Layout analysis"
          - "Component extraction"

  # 3. Development_Managem
  development:
    commands:
      "#dev-init":
        description: "Setup development environment"
        workflow:
          - "Environment setup"
          - "Code scaffolding"
          - "Testing framework"
    testing:
      commands:
        "#test-init":
          description: "Initialize testing environment"
        "#test-unit":
          description: "Run unit tests"
        "#test-integration":
          description: "Run integration tests"
    code_quality:
      analysis:
        "#analyze-code":
          description: "Run code analysis"
          parameters:
            - files: "Files to analyze"
            - depth: "Analysis depth"
      tools:
        - "ESLint"
        - "SonarQube"
        - "CodeClimate"
    database_initialization:
      "#init-database":
        description: "Initialize database environment and structure"
        workflow:
          - "Select database type"
          - "Configure connection"
          - "Setup schema"
          - "Initialize migrations"
        database_types:
          postgres:
            setup:
              - name: "Initialize PostgreSQL"
                commands:
                  - "docker run --name project-db -e POSTGRES_PASSWORD=password -d postgres"
                  - "prisma init"
                configuration:
                  - DATABASE_URL="postgresql://postgres:password@localhost:5432/mydb"
              - name: "Setup Prisma"
                steps:
                  - "Create schema.prisma"
                  - "Generate client"
                  - "Run initial migration"
          
          mongodb:
            setup:
              - name: "Initialize MongoDB"
                commands:
                  - "docker run --name mongo-db -d mongo"
                  - "npm install mongoose"
                configuration:
                  - MONGODB_URI="mongodb://localhost:27017/mydb"
              - name: "Setup Mongoose"
                steps:
                  - "Create schema models"
                  - "Setup connections"
                  - "Initialize indexes"

        schema_management:
          commands:
            "#create-schema":
              description: "Generate database schema from models"
              workflow:
                - "Analyze data models"
                - "Generate schema file"
                - "Setup relationships"
                - "Create indexes"
            
            "#run-migration":
              description: "Create and run database migrations"
              workflow:
                - "Generate migration files"
                - "Validate changes"
                - "Apply migrations"
                - "Verify database state"

        data_management:
          commands:
            "#seed-database":
              description: "Seed database with initial data"
              workflow:
                - "Load seed data files"
                - "Validate data format"
                - "Insert seed data"
                - "Verify data integrity"
            
            "#backup-database":
              description: "Create database backup"
              workflow:
                - "Lock tables"
                - "Export data"
                - "Export schema"
                - "Store backup"

        security:
          setup:
            - "Create database users"
            - "Set permissions"
            - "Configure authentication"
            - "Setup encryption"
          policies:
            - "Password requirements"
            - "Access controls"
            - "Data encryption"
            - "Audit logging"

        monitoring:
          metrics:
            - "Connection pool status"
            - "Query performance"
            - "Storage usage"
            - "Backup status"
          alerts:
            - "Connection issues"
            - "Performance degradation"
            - "Storage warnings"
            - "Backup failures"

        maintenance:
          commands:
            "#optimize-db":
              description: "Perform database optimization"
              workflow:
                - "Analyze performance"
                - "Optimize indexes"
                - "Vacuum tables"
                - "Update statistics"
            
            "#health-check":
              description: "Check database health"
              workflow:
                - "Check connections"
                - "Verify replication"
                - "Check disk space"
                - "Validate backups"

  # 4. Document Management
  document_management:
    cline_docs:
      structure:
        - currentTask.md: "Current task tracking"
        - sprint:
            - current.md: "Current sprint details"
            - backlog.md: "Sprint backlog"
        - context:
            - project.md: "Project context"
            - technical.md: "Technical context"
    sdlc_deliverables:
      structure:
        documentation:
          - product:
              - PRD.md
              -
